# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: AzureFunctionApp@1
  displayName: Azure Function App deploy
  inputs:
    azureSubscription: 'AS'
    appType: functionApp
    appName: 'FirstApp'
    package: $(build.artifactstagingdirectory)/**/*.zip
jobs:

- job: buildandtest
  pool:
    vmImage: 'ubuntu-16.04'
  steps:

  # add steps here to build the app

  # the following will publish an artifact called drop
  - task: PublishBuildArtifacts@1

  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: 'AS'
      appType: functionApp
      appName: 'TestApp'

- job: prod
  pool:
    vmImage: 'ubuntu-16.04'
  dependsOn: buildandtest
  condition: succeeded()
  steps:

  # step to download the artifacts from the previous job
  - task: DownloadBuildArtifacts@0
    inputs:
      artifactName: drop

  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: 'AS'
      appType: functionApp
      appName: 'Prod'
jobs:
- job: test
  variables:
    connectionString: <test-stage connection string>
  steps:
  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: 'AS'
      appType: functionApp
      appName: 'TestApp'
      customWebConfig: -Handler iisnode -NodeStartFile server.js -appType node

- job: prod
  dependsOn: test
  variables:
    connectionString: <prod-stage connection string>
  steps:
  - task: AzureFunctionApp@1
    inputs:
      azureSubscription: 'AS'
      appType: functionApp
      appName: 'ProdApp'
      customWebConfig: -Handler iisnode -NodeStartFile server.js -appType node